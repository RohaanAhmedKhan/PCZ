@model PCZ.ViewModels.IssuesVM
@{
    ViewBag.Title = "Devices";
}
<div class="row">

    <div class="col-xs-10 col-sm-7 col-lg-4 col-md-6" style="float:none !important; margin:0 auto !important">

        @if (Model.Action == 1) {

            if (Model != null && Model.ErrorMessage != null) {<label style="color:red"><b>Error: </b> @Model.ErrorMessage</label>}

        using (Html.BeginForm("Update", "Prices", FormMethod.Post, new { })) {

            <div class="div-section">
                <div class="div-section-heading"><h4>Edit Issue/Price</h4></div>

                <div class=" div-section-body">

                    <table class="table table-responsive table-hover">
                        <thead>
                            <tr>
                                <td></td>
                                <td>
                                    <h4>Details</h4>
                                </td>
                            </tr>
                        </thead>
                        <tbody>

                            <tr>
                                <td><label>Category</label></td>
                                <td>
                                    <select name="Cat" class="form-control ddSearch" onchange="cascade(this)">
                                    @foreach(var option in Model.CategoryList) {
                                        <option value="@option.Value" @(option.Selected ? "selected" : "" ) >@option.Text</option>
                                    }
                                </select>
                                </td>
                            </tr>

                            <tr>
                                <td><label>Device</label></td>
                                <td>@Html.DropDownListFor(m => m.Issue.DeviceId, Model.DeviceList, new { @id = "deviesdd", @class = "ddSearch form-control", @required = "required" })</td>
                            </tr>

                            <tr class="ftco-animate">
                                <td><label>Issue</label></td>
                                <td>@Html.EditorFor(m => m.Issue.Description, new { htmlAttributes = new { @required = "required" } })</td>
                            </tr>

                            <tr class="ftco-animate">
                                <td><label>Trade Cost</label></td>
                                <td>@Html.EditorFor(m => m.Issue.TradePrice, new { htmlAttributes = new { @required = "required" } })</td>
                            </tr>

                            <tr class="ftco-animate">
                                <td><label>Cost</label></td>
                                <td>@Html.EditorFor(m => m.Issue.Price, new { htmlAttributes = new { @required = "required" } })</td>
                            </tr>

                            <tr class="ftco-animate">
                                <td><label>Delivery Time</label></td>
                                <td>@Html.EditorFor(m => m.Issue.DeliveryTime, new { htmlAttributes = new { @required = "required" } })</td>
                            </tr>

                            <tr class="ftco-animate">
                                <td>
                                    <input type="hidden" name="Issue.Id" value="@Model.Issue.Id" />
                                </td>
                                <td><input type="submit" value="Save" class="form-control greenButtonEdged" /></td>

                            </tr>

                        </tbody>
                    </table>
                </div>
            </div>

        }


    }
    else {


        if (Model != null && Model.ErrorMessage != null) {<label style="color:red"><b>Error: </b> @Model.ErrorMessage</label>}

    using (Html.BeginForm("Create", "Prices", FormMethod.Post, new { })) {

        <div class="div-section">

            <div class="div-section-heading"><h4>Add New Issue</h4></div>

            <div class="div-section-body">
                <table class="table table-responsive table-hover">
                    <thead>
                        <tr>
                            <td></td>
                            <td>
                                <h4>Details</h4>
                            </td>
                        </tr>
                    </thead>

                    <tbody>

                        <tr>
                            <td><label>Category</label></td>
                            <td>@Html.DropDownListFor(m => m.Cat, Model.CategoryList, new { @onchange = "cascade(this)", @class = "ddSearch form-control" })</td>
                        </tr>

                        <tr>
                            <td><label>Device</label></td>
                            <td>@Html.DropDownListFor(m => m.Issue.DeviceId, Model.DeviceList, new { @id = "deviesdd", @class = "ddSearch form-control", @required = "required" })</td>
                        </tr>

                        <tr class="ftco-animate">
                            <td><label>Issue</label></td>
                            <td>@Html.EditorFor(m => m.Issue.Description, new { htmlAttributes = new { @required = "required" } })</td>
                        </tr>

                        <tr class="ftco-animate">
                            <td><label>Trade Cost</label></td>
                            <td>@Html.EditorFor(m => m.Issue.TradePrice, new { htmlAttributes = new { @required = "required" } })</td>
                        </tr>

                        <tr class="ftco-animate">
                            <td><label>Cost</label></td>
                            <td>@Html.EditorFor(m => m.Issue.Price, new { htmlAttributes = new { @required = "required" } })</td>
                        </tr>

                        <tr class="ftco-animate">
                            <td><label>Delivery Time</label></td>
                            <td>@Html.EditorFor(m => m.Issue.DeliveryTime, new { htmlAttributes = new { @required = "required"} })</td>
                        </tr>

                        <tr class="ftco-animate">
                            <td></td>
                            <td><input type="submit" value="Save" class="form-control greenButtonEdged" /></td>

                        </tr>

                    </tbody>
                </table>
            </div>
        </div>
    }

}
    </div>

</div>

<div class="div-section">

    <div class="div-section-heading" style="display:flex; justify-content:space-between">
        <h4>Issues/Prices List</h4>
        <h4 style="float:right"><a class="btn-primary" href="~/Admin/Prices/">Create New</a></h4>
    </div>


    <div class="row div-body">
        <div class="col-sm-12">

            <table class="table table-striped table-bordered table-responsive" id="dtTbl">
                <thead>
                    <tr>
                        <th>Device</th>
                        <th>Device Type</th>
                        <th>Problem Description</th>
                        <th>Delivery Time</th>
                        <th>Trade Cost</th>
                        <th>Cost</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var dt in Model.Issues) {
                        <tr>
                            <td>@dt.Device.Brand.Name @dt.Device.Name</td>
                            <td>@dt.Device.Brand.DeviceType.Name</td>
                            <td>@dt.Description</td>
                            <td>@dt.DeliveryTime</td>
                            <td>@dt.TradePrice</td>
                            <td>@dt.Price</td>
                            <td><a href="~/admin/Prices/index?act=1&id=@dt.Id">Edit</a> Delete</td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
    </div>

</div>
@{

}
<script>

        function cascade(category) {
            $("#deviesdd").empty();
            $("#overlay").fadeIn(0);
            $.ajax({

                type: 'POST',
                url: '@Url.Action("GetDevices", "Prices", new { Area = "Admin" })',
                dataType: 'json',
                data: { cat: category.value },
                success: function (series) {

                    $.each(series, function (i, s) {
                        $("#deviesdd").append('<option value="' + s.Value + '" >' + s.Text + '</option>');
                    });

                },

                error: function (ex) {
                    alert('Failed to retrieve data ' + ex.responseText);
                }

            }).done(function() {
                setTimeout(function(){
                    $("#overlay").fadeOut(0);
                },0);
            });

            return false;
        }

</script>